version: '3'
services:

  # Proxy Service
  proxy:
    environment:
      TZ: ${GENERAL_TIMEZONE}
    restart: always
    depends_on:
      - nginx-api
      - nginx-front
    image: jwilder/nginx-proxy
    ports:
      - "${PROXY_HOST_HTTP_PORT}:80"
    volumes:
      - ./docker/logs/proxy:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro

  # API Service
  nginx-api:
    image: nginx:${NGINX_VERSION}-alpine
    volumes:
      - ${PATH_API_SRC}:/var/www/html
      - ./docker/logs/nginx-api:/var/log/nginx
      - ./docker/services/nginx-api/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - php-fpm
    environment:
      TZ: ${GENERAL_TIMEZONE}
      VIRTUAL_HOST: ${API_VIRTUAL_HOST}
      VIRTUAL_PORT: ${API_HOST_HTTP_PORT}
    ports:
      - "${API_HOST_HTTP_PORT}:80"
      
  php-fpm:
    environment:
      - TZ=${GENERAL_TIMEZONE}
    build:
      context: ./docker/services/php-fpm
      args:
        - VERSION=${PHP_FPM_VERSION}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
    volumes:
      - ./docker/logs/php-fpm:/var/log/php-fpm
      - ./docker/services/php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ${PATH_API_SRC}:/var/www/html
    expose:
      - "9000"

  # Front Service
  nginx-front:
    image: nginx:${NGINX_VERSION}-alpine
    volumes:
      - ${PATH_FRONT_SRC}:/var/www/html
      - ./docker/logs/nginx-front:/var/log/nginx
      - ./docker/services/nginx-front/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    environment:
      TZ: ${GENERAL_TIMEZONE}
      VIRTUAL_HOST: ${FRONT_VIRTUAL_HOST}
      VIRTUAL_PORT: ${FRONT_HOST_HTTP_PORT}
    ports:
      - "${FRONT_HOST_HTTP_PORT}:80"

  # MSSQL Service
  mssql:
    build:
      context: ./docker/services/mssql
    environment:
      - TZ=${GENERAL_TIMEZONE}
      - ACCEPT_EULA=Y
      - MSSQL_PID=${MSSQL_PID}
      - MSSQL_DATABASE=${MSSQL_DATABASE}
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    volumes:
#      - ./docker/services/mssql/data:/var/opt/mssql
      - ./docker/logs/mssql:/var/opt/mssql/log
    ports:
      - "${MSSQL_HOST_PORT}:1433"
